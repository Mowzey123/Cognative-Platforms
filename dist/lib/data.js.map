{"version":3,"sources":["lib/data.js"],"names":["Object","defineProperty","exports","value","fs","require","path","mkdirp","Data","basedir","join","__dirname","dir","file","data","open","err","fileDescriptor","writeFile","JSON","stringify","close","console","log","error","update","readFile","unlink","appendFile","dataobj","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\nclass Data {\n    constructor() {\n        this.basedir = path.join(__dirname, '../data/'); //define base data dir\n    }\n    create(dir, file, data) {\n        //open file for writing\n        try {\n            fs.open(this.basedir + dir + '/' + file, 'wx', function (err, fileDescriptor) {\n                if (!err && fileDescriptor) {\n                    fs.writeFile(fileDescriptor, JSON.stringify(data), function (err) {\n                        if (!err) {\n                            fs.close(fileDescriptor, function (err) {\n                                if (!err) {\n                                    return false;\n                                }\n                                else {\n                                    console.log(`Error closing ${file} file`);\n                                    return `Error closing ${file} file`;\n                                }\n                            });\n                        }\n                        else {\n                            console.log(`Error writng to ${file}`);\n                            return `Error writng to ${file}`;\n                        }\n                    });\n                }\n            });\n        }\n        catch (error) {\n            this.update(dir, file, data);\n        }\n    }\n    //read form existing file\n    read(dir, file) {\n        fs.readFile(this.basedir + dir + '/' + file + '.json', 'utf-8', function (err, data) {\n            // callback(err,data);\n            if (!err && data) {\n                return { \"status\": false, \"data\": data };\n            }\n            else {\n                return { \"status\": false, \"Error\": err };\n            }\n        });\n    }\n    delete(dir, file) {\n        //unlink\n        fs.unlink(this.basedir + dir + '/' + file + '.json', function (err) {\n            if (!err) {\n                return false;\n            }\n            else {\n                return `failed to delete file ${file}`;\n            }\n        });\n    }\n    update(dir, file, data) {\n        try {\n            fs.appendFile(this.basedir + dir + '/' + file + '.json', \",\" + JSON.stringify(data), function (err) {\n                if (err) {\n                    console.log(err);\n                    return `Could not update ${file}`;\n                }\n                else {\n                    console.log('Updated!');\n                    return `updated`;\n                }\n            });\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    makeDir(dir) {\n        mkdirp(dir, function (err) {\n            if (err)\n                console.error(err);\n            else\n                console.log('pow!');\n        });\n    }\n}\nexports.Data = Data;\nconst dataobj = new Data();\nexports.default = dataobj;\n"],"file":"data.js"}