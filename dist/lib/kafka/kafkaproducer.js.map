{"version":3,"sources":["lib/kafka/kafkaproducer.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","kafka_typescript_1","require","rdkafka","rdkafkaProducer","Producer","producers","kafkaproducer","config","ProducerConfig","topic","SimpleProducer","create","connect","prod","setTopic","producer","key","msg","console","log","send","err","catch"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst kafka_typescript_1 = require(\"kafka-typescript\");\nconst rdkafka = require(\"node-rdkafka\");\nconst rdkafkaProducer = rdkafka.Producer;\nconst producers = {};\nclass kafkaproducer {\n    constructor() {\n        this.config = new kafka_typescript_1.ProducerConfig(\"localhost\", \"9092\");\n    }\n    createTopicProducer(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const prod = yield new kafka_typescript_1.SimpleProducer().create(rdkafkaProducer, this.config).connect();\n            prod.setTopic(topic);\n            producers[topic] = prod;\n            return prod;\n        });\n    }\n    sendMessage(producer, key, topic, msg) {\n        try {\n            new kafka_typescript_1.SimpleProducer().create(rdkafkaProducer, this.config).connect().then((producer) => {\n                try {\n                    console.log(producer.send(key, msg, topic));\n                }\n                catch (err) {\n                    console.log(err);\n                }\n            }).catch((err) => {\n                console.log(err);\n            });\n        }\n        catch (err) {\n            console.log(\"Failed to find producer\");\n        }\n    }\n}\nexports.kafkaproducer = kafkaproducer;\n"],"file":"kafkaproducer.js"}