{"version":3,"sources":["lib/morgan.logger.js"],"names":["Object","defineProperty","exports","value","fs","require","path","morgan","morganBody","winston_1","config_1","morganLogger","app","createMorganLogger","basedir","join","__dirname","process","env","LOG_DIR","use","skip","req","res","statusCode","stream","createWriteStream","flags","prettify","tolog","logger","createLogger","level","LOG_LEVEL","format","combine","timestamp","printf","info","message","json","transports","Console","File","filename"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst morgan = require(\"morgan\");\nconst morganBody = require(\"morgan-body\");\nconst winston_1 = require(\"winston\");\nconst config_1 = require(\"../config/config\");\nclass morganLogger {\n    constructor(app) {\n        this.createMorganLogger(app);\n    }\n    createMorganLogger(app) {\n        const basedir = path.join(__dirname, \"../\", process.env.LOG_DIR);\n        app.use(morgan('common', {\n            skip: function (req, res) {\n                return res.statusCode < 400;\n            }, stream: fs.createWriteStream(path.join(basedir, 'access.log'), { flags: 'a' })\n        }));\n        app.use(morgan('commmon', {\n            skip: function (req, res) {\n                return res.statusCode >= 400;\n            }, stream: fs.createWriteStream(path.join(basedir, 'error.log'), { flags: 'a' })\n        }));\n        morganBody(app, {\n            prettify: true,\n            skip: function (req, res) {\n            },\n            stream: fs.createWriteStream(path.join(basedir, 'reqres.log'), { flags: 'a' })\n        });\n    }\n    logWihWinston(tolog) {\n        const basedir = path.join(__dirname, \"../\", process.env.LOG_DIR, 'access.log');\n        const logger = winston_1.createLogger({\n            level: config_1.LOG_LEVEL === 'development' ? 'debug' : 'info',\n            format: winston_1.format.combine(winston_1.format.timestamp({\n                format: 'YYYY-MM-DD HH:mm:ss'\n            }), winston_1.format.printf(info => `${info.timestamp} ${info.level}: ${info.message}`), winston_1.format.json()),\n            transports: [\n                new winston_1.transports.Console(),\n                new winston_1.transports.File({ filename: basedir })\n            ]\n        });\n        logger.info(tolog);\n    }\n}\nexports.morganLogger = morganLogger;\n"],"file":"morgan.logger.js"}