{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","express","require","helmet","compression","cors","config","bodyParser","morgan_logger_1","indexRoutes_1","Server","app","routes","set","PORT","use","json","urlencoded","extended","morganLogger","default","listen","get","console","log","server","start"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,OAAM,GAAGJ,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMM,eAAe,GAAGN,OAAO,CAAC,qBAAD,CAA/B,C,CACA;;;AACA,IAAMO,aAAa,GAAGP,OAAO,CAAC,sBAAD,CAA7B;;IACMQ,M;;;AACF;AACA,oBAAc;AAAA;;AACV,SAAKC,GAAL,GAAWV,OAAO,EAAlB;AACA,SAAKK,MAAL;AACA,SAAKM,MAAL;AACH;;;;6BACQ;AACL;AACA,WAAKD,GAAL,CAASE,GAAT,CAAa,MAAb,EAAqBP,OAAM,CAACQ,IAAP,IAAe,IAApC;AACA,WAAKH,GAAL,CAASI,GAAT,CAAaR,UAAU,CAACS,IAAX,EAAb;AACA,WAAKL,GAAL,CAASI,GAAT,CAAad,OAAO,CAACe,IAAR,EAAb;AACA,WAAKL,GAAL,CAASI,GAAT,CAAad,OAAO,CAACgB,UAAR,CAAmB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAnB,CAAb;AACA,WAAKP,GAAL,CAASI,GAAT,CAAaZ,MAAM,EAAnB;AACA,WAAKQ,GAAL,CAASI,GAAT,CAAaX,WAAW,EAAxB;AACA,WAAKO,GAAL,CAASI,GAAT,CAAaV,IAAI,EAAjB;AACA,UAAIG,eAAe,CAACW,YAApB,CAAiC,KAAKR,GAAtC;AACH;;;6BACQ;AACL;AACA,WAAKA,GAAL,CAASI,GAAT,CAAa,GAAb,EAAkBN,aAAa,CAACW,OAAhC;AACH,K,CACD;;;;4BACQ;AAAA;;AACJ,WAAKT,GAAL,CAASU,MAAT,CAAgB,KAAKV,GAAL,CAASW,GAAT,CAAa,MAAb,CAAhB,EAAsC,YAAM;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,KAAI,CAACb,GAAL,CAASW,GAAT,CAAa,MAAb,CAA3C;AACH,OAFD;AAGH;;;;;;AAEL,IAAMG,MAAM,GAAG,IAAIf,MAAJ,EAAf;AACAe,MAAM,CAACC,KAAP;AACA3B,OAAO,CAACqB,OAAR,GAAkBK,MAAM,CAACd,GAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst express = require(\"express\");\nconst helmet = require(\"helmet\");\nconst compression = require(\"compression\");\nconst cors = require(\"cors\");\nconst config = require(\"./config/config\");\nconst bodyParser = require(\"body-parser\");\nconst morgan_logger_1 = require(\"./lib/morgan.logger\");\n// Routes\nconst indexRoutes_1 = require(\"./routes/indexRoutes\");\nclass Server {\n    //testing\n    constructor() {\n        this.app = express();\n        this.config();\n        this.routes();\n    }\n    config() {\n        // Server Settings and middleware\n        this.app.set('port', config.PORT || 4000);\n        this.app.use(bodyParser.json());\n        this.app.use(express.json());\n        this.app.use(express.urlencoded({ extended: false }));\n        this.app.use(helmet());\n        this.app.use(compression());\n        this.app.use(cors());\n        new morgan_logger_1.morganLogger(this.app);\n    }\n    routes() {\n        //adding imported routes to middleware\n        this.app.use('/', indexRoutes_1.default);\n    }\n    //start running server on port\n    start() {\n        this.app.listen(this.app.get('port'), () => {\n            console.log('Server Is Listening On Port', this.app.get('port'));\n        });\n    }\n}\nconst server = new Server();\nserver.start();\nexports.default = server.app;\n"],"file":"index.js"}